name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # Check Code style quickly by running `rustfmt` over all code
  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: rustup component add rustfmt
    - run: cargo fmt --all -- --check

  wit-dep-check:
    name: Check wit-deps
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install wit-deps
      run: |
        curl -Lo 'wit-deps' https://github.com/bytecodealliance/wit-deps/releases/download/v0.3.0/wit-deps-x86_64-unknown-linux-musl
        chmod +x wit-deps
        echo `pwd` >> $GITHUB_PATH

    - name: Check wasi crate
      run: |
        wit-deps lock
        git add -N wit/deps
        git diff --exit-code
      working-directory: ./wasi

    - name: Check wasi-preview1-component-adapter crate
      run: |
        wit-deps lock
        git add -N wit/deps
        git diff --exit-code
      working-directory: ./crates/wasi-preview1-component-adapter

    - name: Check reactor-tests crate
      run: |
        wit-deps lock
        git add -N wit/deps
        git diff --exit-code
      working-directory: ./test-programs/reactor-tests

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - build: ubuntu-latest
            os: ubuntu-latest
          - build: windows-latest
            os: windows-latest
          - build: macos-latest
            os: macos-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup update nightly
    - run: rustup target add --toolchain=stable wasm32-wasi wasm32-unknown-unknown
    - run: rustup target add --toolchain=nightly wasm32-wasi wasm32-unknown-unknown
    - name: Run test suite
      run: cargo +nightly test -p host

  build-preview1-component-adapter:
    name: Build wasi-preview1-component-adapter
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      contents: write
    defaults:
      run:
        working-directory: ./crates/wasi-preview1-component-adapter
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: rustup target add wasm32-wasi wasm32-unknown-unknown

    - name: Install wasm-tools
      run: |
        curl -L https://github.com/bytecodealliance/wasm-tools/releases/download/wasm-tools-1.0.27/wasm-tools-1.0.27-x86_64-linux.tar.gz | tar xfz -
        echo `pwd`/wasm-tools-1.0.27-x86_64-linux >> $GITHUB_PATH

      # Debug build, default features (reactor)
    - run: cargo build --target wasm32-unknown-unknown
    - run: cargo run -p verify-component-adapter -- ./target/wasm32-unknown-unknown/debug/wasi_preview1_component_adapter.wasm

      # Debug build, command
    - run: cargo build --target wasm32-unknown-unknown --no-default-features --features command
    - run: cargo run -p verify-component-adapter -- ./target/wasm32-unknown-unknown/debug/wasi_preview1_component_adapter.wasm

    # Release build, command
    - run: cargo build --target wasm32-unknown-unknown --release --no-default-features --features command
    - run: cargo run -p verify-component-adapter -- ./target/wasm32-unknown-unknown/release/wasi_preview1_component_adapter.wasm
    - run: wasm-tools metadata add --name "wasi_preview1_component_adapter.command.adapter:${GITHUB_SHA}" target/wasm32-unknown-unknown/release/wasi_preview1_component_adapter.wasm -o wasi_preview1_component_adapter.command.wasm
    - uses: actions/upload-artifact@v3
      with:
        name: wasi_preview1_component_adapter.command.wasm
        path: crates/wasi-preview1-component-adapter/wasi_preview1_component_adapter.command.wasm

    # Release build, default features (reactor)
    - run: cargo build --target wasm32-unknown-unknown --release
    - run: cargo run -p verify-component-adapter -- ./target/wasm32-unknown-unknown/release/wasi_preview1_component_adapter.wasm
    - run: wasm-tools metadata add --name "wasi_preview1_component_adapter.reactor.adapter:${GITHUB_SHA}" target/wasm32-unknown-unknown/release/wasi_preview1_component_adapter.wasm -o wasi_preview1_component_adapter.reactor.wasm
    - uses: actions/upload-artifact@v3
      with:
        name: wasi_preview1_component_adapter.reactor.wasm
        path: crates/wasi-preview1-component-adapter/wasi_preview1_component_adapter.reactor.wasm


    - uses: marvinpinto/action-automatic-releases@latest
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: latest
        prerelease: true
        title: "Latest Build"
        files: |
          crates/wasi-preview1-component-adapter/wasi_preview1_component_adapter.reactor.wasm
          crates/wasi-preview1-component-adapter/wasi_preview1_component_adapter.command.wasm
