name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # Check Code style quickly by running `rustfmt` over all code
  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: rustup component add rustfmt
    - run: cargo fmt --all -- --check

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - build: ubuntu-latest
            os: ubuntu-latest
          - build: windows-latest
            os: windows-latest
          - build: macos-latest
            os: macos-latest
    steps:
    - uses: actions/checkout@v3
      # TODO: Remove +nightly once lambda-fairy/rust-errno#66 is released and
      # rust-lang/rust#105395 reaches stable.
    - run: rustup update nightly
    - run: rustup default nightly
    - run: rustup target add --toolchain=nightly wasm32-wasi wasm32-unknown-unknown
    - run: cargo build --target wasm32-unknown-unknown
    - run: cargo run -p verify -- ./target/wasm32-unknown-unknown/debug/wasi_snapshot_preview1.wasm
    - run: cargo build --target wasm32-unknown-unknown --features command
    - run: cargo run -p verify -- ./target/wasm32-unknown-unknown/debug/wasi_snapshot_preview1.wasm
    - run: cargo build --release --target wasm32-unknown-unknown
    - run: cargo run -p verify -- ./target/wasm32-unknown-unknown/release/wasi_snapshot_preview1.wasm
    - run: cargo build --release --target wasm32-unknown-unknown --features command
    - run: cargo run -p verify -- ./target/wasm32-unknown-unknown/release/wasi_snapshot_preview1.wasm
    - run: cargo test -p host

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      contents: write
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: rustup target add wasm32-wasi wasm32-unknown-unknown
    - run: cargo build --target wasm32-unknown-unknown --release --features command
    - run: mv target/wasm32-unknown-unknown/release/wasi_snapshot_preview1.wasm wasi_snapshot_preview1.command.wasm
    - uses: actions/upload-artifact@v3
      with:
        name: wasi_snapshot_preview1.command.wasm
        path: wasi_snapshot_preview1.command.wasm
    - run: cargo build --target wasm32-unknown-unknown --release

    - run: cargo install --git https://github.com/bytecodealliance/wit-bindgen --rev d7b870268e0b5294eef4638350f8ac3357bf042d wit-bindgen-cli
    - run: wit-bindgen guest c wit/wasi.wit
    - uses: actions/upload-artifact@v3
      with:
        name: wasi.c
        path: wasi.c
    - uses: actions/upload-artifact@v3
      with:
        name: wasi.h
        path: wasi.h
    - uses: actions/upload-artifact@v3
      with:
        name: wasi_component_type.o
        path: wasi_component_type.o
    - run: wit-bindgen guest rust wit/wasi.wit
    - uses: actions/upload-artifact@v3
      with:
        name: wasi.rs
        path: wasi.rs

    - uses: actions/upload-artifact@v3
      with:
        name: wasi_snapshot_preview1.wasm
        path: target/wasm32-unknown-unknown/release/wasi_snapshot_preview1.wasm

    - uses: marvinpinto/action-automatic-releases@latest
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: latest
        prerelease: true
        title: "Latest Build"
        files: |
          target/wasm32-unknown-unknown/release/wasi_snapshot_preview1.wasm
          wasi_snapshot_preview1.command.wasm
          wasi.c
          wasi.h
          wasi_component_type.o
          wasi.rs
